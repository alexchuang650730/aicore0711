# PowerAutomation 4.0 测试配置文件

# 基础配置
basic:
  output_dir: "./test_results"              # 测试结果输出目录
  parallel_execution: true                 # 是否并行执行测试
  max_workers: 4                           # 最大并行工作线程数
  timeout: 300                             # 测试超时时间(秒)
  retry_failed: true                       # 是否重试失败的测试
  retry_count: 3                           # 重试次数
  
# 报告配置
reporting:
  generate_reports: true                   # 是否生成测试报告
  report_formats: ["html", "json"]         # 报告格式
  include_screenshots: true                # 是否包含截图
  include_logs: true                       # 是否包含日志
  detailed_errors: true                    # 是否包含详细错误信息
  
# 清理配置
cleanup:
  cleanup_old_results: true                # 是否自动清理旧结果
  cleanup_days: 30                         # 清理多少天前的结果
  max_storage_size: "5GB"                  # 最大存储大小
  
# 测试套件配置
test_suites:
  # 演示测试配置
  tc_demo:
    enabled: true
    priority: "p0"
    timeout: 600
    retry_count: 2
    parallel: false
    
  # UI测试配置
  ui_tests:
    enabled: true
    priority: "p0"
    timeout: 300
    retry_count: 3
    parallel: true
    browser_config:
      headless: false
      window_size: [1920, 1080]
      implicit_wait: 10
      
  # 集成测试配置
  integration_tests:
    enabled: true
    priority: "p1"
    timeout: 600
    retry_count: 2
    parallel: false
    
  # 性能测试配置
  performance_tests:
    enabled: false
    priority: "p2"
    timeout: 1800
    retry_count: 1
    parallel: false

# 环境配置
environment:
  # 开发环境
  development:
    base_url: "http://localhost:8080"
    api_url: "http://localhost:3000/api"
    database_url: "sqlite:///test.db"
    
  # 测试环境
  testing:
    base_url: "http://test.example.com"
    api_url: "http://test.example.com/api"
    database_url: "postgresql://test:test@localhost/testdb"
    
  # 生产环境
  production:
    base_url: "https://app.example.com"
    api_url: "https://api.example.com"
    database_url: "postgresql://prod:prod@prod-db/proddb"

# 浏览器配置
browser:
  default_browser: "chrome"
  browsers:
    chrome:
      driver_path: "chromedriver"
      options:
        - "--no-sandbox"
        - "--disable-dev-shm-usage"
        - "--disable-gpu"
    firefox:
      driver_path: "geckodriver"
      options:
        - "--headless"
    safari:
      driver_path: "safaridriver"
      options: []

# 数据库配置
database:
  test_data_cleanup: true                  # 测试后清理数据
  use_transactions: true                   # 使用事务回滚
  seed_data: true                          # 是否加载种子数据
  
# 通知配置
notifications:
  enabled: true
  email:
    enabled: false
    smtp_server: "smtp.example.com"
    smtp_port: 587
    username: "test@example.com"
    password: "password"
    recipients: ["team@example.com"]
  slack:
    enabled: false
    webhook_url: "https://hooks.slack.com/..."
    channel: "#testing"
  
# 日志配置
logging:
  level: "INFO"                            # 日志级别
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file_logging: true                       # 是否记录到文件
  log_file: "./test_results/test.log"      # 日志文件路径
  max_file_size: "10MB"                    # 最大日志文件大小
  backup_count: 5                          # 日志文件备份数量

# 录制即测试配置
record_as_test:
  enabled: true
  auto_record: false                       # 是否自动录制
  video_recording: true                    # 是否录制视频
  screenshot_on_failure: true              # 失败时截图
  save_har_files: false                    # 是否保存HAR文件
  
# AI集成配置
ai_integration:
  enabled: true
  claude_api_key: "${CLAUDE_API_KEY}"      # 从环境变量获取
  model: "claude-3-sonnet-20240229"
  test_optimization: true                  # 启用测试优化
  smart_assertions: true                   # 智能断言生成
  
# 性能监控配置
performance_monitoring:
  enabled: true
  memory_threshold: "1GB"                  # 内存使用阈值
  cpu_threshold: 80                        # CPU使用阈值(%)
  response_time_threshold: 5000            # 响应时间阈值(ms)
  
# 安全配置
security:
  mask_sensitive_data: true                # 遮蔽敏感数据
  exclude_credentials: true                # 排除凭据信息
  sanitize_logs: true                      # 清理日志中的敏感信息

